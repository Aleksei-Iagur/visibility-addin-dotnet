<UserControl x:Class="VisibilityLibrary.Views.VisibilityLLOSView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:VisibilityLibrary"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:prop="clr-namespace:VisibilityLibrary.Properties"
             mc:Ignorable="d" 
             d:DesignHeight="600" d:DesignWidth="300">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/VisibilityLibrary;component/MAResourceDictionary.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <!--<local:IPointToStringConverter x:Key="iPointToString" />-->
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <ScrollViewer VerticalScrollBarVisibility="Auto">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <TextBlock Grid.ColumnSpan="3" Text="{x:Static prop:Resources.LabelInputSurface}" Margin="3,3,0,0" />
                <Grid Grid.Row="1" Grid.ColumnSpan="3">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <ComboBox  ItemsSource="{Binding SurfaceLayerNames}" SelectedItem="{Binding SelectedSurfaceName}" Margin="3,3,0,0">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel>
                                    <TextBlock Text="{Binding}"/>
                                </StackPanel>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <Button Style="{StaticResource buttonProperties}" 
                        Grid.Column="1" 
                        Margin="3,3,0,0" />
                </Grid>
                <TextBlock Grid.Row="2" Grid.ColumnSpan="3" Text="{x:Static prop:Resources.LabelObserverPoints}" Margin="3,3,0,0" />
                <ListBox x:Name="listBoxObservers" Grid.Row="3" Grid.ColumnSpan="2" ItemsSource="{Binding ObserverAddInPoints}" ScrollViewer.VerticalScrollBarVisibility="Visible" 
                 PreviewMouseRightButtonDown="ListBox_PreviewMouseRightButtonDown"
                 SelectionMode="Multiple"
                 Height="60" Margin="3,3,0,0">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="{Binding Text}" />
                            </StackPanel>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                    <ListBox.ContextMenu>
                        <ContextMenu DataContext="{Binding Path=PlacementTarget, RelativeSource={RelativeSource Self}}">
                            <MenuItem Header="{x:Static prop:Resources.MenuLabelDelete}" Command="{Binding DataContext.DeletePointCommand}" CommandParameter="{Binding Path=SelectedItems}" />
                            <MenuItem Header="{x:Static prop:Resources.MenuLabelDeleteAll}" Command="{Binding DataContext.DeleteAllPointsCommand}" CommandParameter="{x:Static prop:Resources.ToolModeObserver}" />
                        </ContextMenu>
                    </ListBox.ContextMenu>
                    <ListBox.InputBindings>
                        <KeyBinding Key="Delete" Command="{Binding DeletePointCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListBox}}, Path=SelectedItems}" />
                    </ListBox.InputBindings>
                </ListBox>
                <Button Grid.Row="3" Grid.Column="2" Command="{Binding ActivateToolCommand}" CommandParameter="{x:Static prop:Resources.ToolModeObserver}" VerticalAlignment="Center"
            HorizontalAlignment="Center" ToolTip="{x:Static prop:Resources.TooltipObserverMapPointTool}" Margin="3,3,0,0">
                    <Image Source="/VisibilityLibrary;component/Images/Add_Point32_d.png" Width="18" Height="18" />
                </Button>
                <TextBlock Grid.Row="4" Grid.ColumnSpan="3" Text="{x:Static prop:Resources.LabelTargetPoints}" Margin="3,3,0,0" />
                <ListBox x:Name="listBoxTargets" Grid.Row="5" Grid.ColumnSpan="2" ItemsSource="{Binding TargetAddInPoints}" ScrollViewer.VerticalScrollBarVisibility="Visible" 
                 PreviewMouseRightButtonDown="ListBox_PreviewMouseRightButtonDown"
                 SelectionMode="Multiple"
                 Height="60" Margin="3,3,0,0">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="{Binding Text}" />
                            </StackPanel>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                    <ListBox.ContextMenu>
                        <ContextMenu DataContext="{Binding Path=PlacementTarget, RelativeSource={RelativeSource Self}}">
                            <MenuItem Header="{x:Static prop:Resources.MenuLabelDelete}" Command="{Binding DataContext.DeletePointCommand}" CommandParameter="{Binding Path=SelectedItems}" />
                            <MenuItem Header="{x:Static prop:Resources.MenuLabelDeleteAll}" Command="{Binding DataContext.DeleteAllPointsCommand}" CommandParameter="{x:Static prop:Resources.ToolModeTarget}" />
                        </ContextMenu>
                    </ListBox.ContextMenu>
                    <ListBox.InputBindings>
                        <KeyBinding Key="Delete" Command="{Binding DeletePointCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListBox}}, Path=SelectedItems}" />
                    </ListBox.InputBindings>
                </ListBox>
                <Button Grid.Row="5" Grid.Column="2" Command="{Binding ActivateToolCommand}" CommandParameter="{x:Static prop:Resources.ToolModeTarget}" VerticalAlignment="Center"
                HorizontalAlignment="Center" ToolTip="{x:Static prop:Resources.TooltipTargetMapPointTool}" Margin="3,3,0,0">
                    <Image Source="/VisibilityLibrary;component/Images/Add_Point32_d.png" Width="18" Height="18" />
                </Button>
                <GroupBox Header="{x:Static prop:Resources.LabelOffsets}" 
                          Grid.Row="6" Grid.ColumnSpan="4"
                          Margin="0,3,0,0">
                    <StackPanel>
                        <TextBlock Text="{x:Static prop:Resources.LabelObserverOffset}" Margin="3,3,0,0" />
                        <TextBox x:Name="tbObserverOffset" Text="{Binding ObserverOffset, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True}"
                            Validation.ErrorTemplate="{StaticResource errorTemplate}" Margin="3,3,0,0" />
                        <TextBlock Text="{x:Static prop:Resources.LabelTargetOffset}" Margin="3,3,0,0" />
                        <TextBox x:Name="tbTargetOffset" Text="{Binding TargetOffset, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True}"
                            Validation.ErrorTemplate="{StaticResource errorTemplate}" Margin="3,3,0,0" />
                        <ComboBox x:Name="cmbOffsetUnitType"
                            ItemsSource="{Binding Source={StaticResource lineDistanceData}}" 
                            SelectedItem="{Binding Path=OffsetUnitType, Mode=TwoWay}"                      
                            Height="Auto" Margin="3,3,0,0">
                        </ComboBox>
                    </StackPanel>
                </GroupBox>
                <StackPanel Grid.Row="12" Grid.ColumnSpan="3" Orientation="Horizontal" HorizontalAlignment="Right">
                    <Button Grid.Row="12" Grid.Column="0" Content="{x:Static prop:Resources.LabelCancel}" ToolTip="{x:Static prop:Resources.LabelCancel}" Command="{Binding CancelCommand}" Margin="3,20,0,0">
                        <Button.Style>
                            <Style TargetType="Button">
                                <Setter Property="IsEnabled" Value="False" />
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding ElementName=listBoxObservers, Path=HasItems}" Value="True" />
                                            <Condition Binding="{Binding IsRunning}" Value="False" />
                                        </MultiDataTrigger.Conditions>
                                        <MultiDataTrigger.Setters>
                                            <Setter Property="IsEnabled" Value="True" />
                                        </MultiDataTrigger.Setters>
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding ElementName=listBoxTargets, Path=HasItems}" Value="True" />
                                            <Condition Binding="{Binding IsRunning}" Value="False" />
                                        </MultiDataTrigger.Conditions>
                                        <MultiDataTrigger.Setters>
                                            <Setter Property="IsEnabled" Value="True" />
                                        </MultiDataTrigger.Setters>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button Grid.Row="12" Grid.Column="1" Content="{x:Static prop:Resources.LabelOK}" ToolTip="{x:Static prop:Resources.LabelOK}" Command="{Binding SubmitCommand}" Margin="3,20,0,0">
                        <Button.Style>
                            <Style TargetType="Button">
                                <Setter Property="IsEnabled" Value="False" />
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding ElementName=listBoxObservers, Path=HasItems}" Value="True" />
                                            <Condition Binding="{Binding ElementName=listBoxTargets, Path=HasItems}" Value="True" />
                                            <Condition Binding="{Binding ElementName=tbObserverOffset, Path=(Validation.HasError)}" Value="False" />
                                            <Condition Binding="{Binding ElementName=tbTargetOffset, Path=(Validation.HasError)}" Value="False" />
                                        </MultiDataTrigger.Conditions>
                                        <MultiDataTrigger.Setters>
                                            <Setter Property="IsEnabled" Value="True" />
                                        </MultiDataTrigger.Setters>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button Grid.Row="12" Grid.Column="2" Content="{x:Static prop:Resources.LabelClearGraphics}" ToolTip="{x:Static prop:Resources.LabelClearGraphics}" Command="{Binding ClearGraphicsCommand}" Margin="3,20,0,0">
                        <Button.Style>
                            <Style TargetType="Button">
                                <Setter Property="IsEnabled" Value="False" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding HasMapGraphics}" Value="True">
                                        <Setter Property="IsEnabled" Value="True" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </StackPanel>
            </Grid>
        </ScrollViewer>
    </Grid>
</UserControl>
