<UserControl x:Class="ArcMapAddinVisibility.Views.VisibilityRLOSView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ArcMapAddinVisibility"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:viewModels="clr-namespace:ArcMapAddinVisibility.ViewModels"
             xmlns:prop="clr-namespace:ArcMapAddinVisibility.Properties"
             mc:Ignorable="d" 
             d:DesignHeight="595" d:DesignWidth="300">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/ArcMapAddinVisibility;component/MAResourceDictionary.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <viewModels:RLOSViewModel x:Key="rlosViewModel" />
            <local:IPointToStringConverter x:Key="iPointToString" />
        </ResourceDictionary>
    </UserControl.Resources>
    <UserControl.DataContext>
        <StaticResourceExtension ResourceKey="rlosViewModel" />
    </UserControl.DataContext>
    <Grid>
        <ScrollViewer VerticalScrollBarVisibility="Auto">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <TextBlock Text="{x:Static prop:Resources.LabelInputSurface}" 
               HorizontalAlignment="Stretch" 
               Margin="5,5,5,5"
               Grid.ColumnSpan="3" Grid.Row="0" />
                <ComboBox x:Name="cmbInputSurface"
                Height="Auto"
                Margin="5,5,5,5"
                Grid.Row="1" Grid.ColumnSpan="3"
                ItemsSource="{Binding SurfaceLayerNames}" SelectedItem="{Binding SelectedSurfaceName}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel>
                                <TextBlock Text="{Binding}"/>
                            </StackPanel>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
                <TextBlock Text="{x:Static prop:Resources.LabelObserverPoints}" 
               HorizontalAlignment="Stretch" 
               Margin="5,5,5,5" Grid.Row="2" />

                <Button Command="{Binding ActivateToolCommand}"
                CommandParameter="{x:Static prop:Resources.ToolModeObserver}"
                Width="24" Height="24" HorizontalAlignment="Right" 
                Grid.Row="3" Grid.Column="2" 
                ToolTip="{x:Static prop:Resources.TooltipMapPointTool}" Margin="0,5,5,5">
                    <Image Source="/ArcMapAddinVisibility;component/Images/Add_Point32_d.png" Width="18" Height="18" HorizontalAlignment="Right" />
                </Button>
                <ListBox x:Name="listBoxObservers" ItemsSource="{Binding ObserverPoints}" ScrollViewer.VerticalScrollBarVisibility="Visible" 
                         PreviewMouseRightButtonDown="ListBox_PreviewMouseRightButtonDown"
                         SelectionMode="Multiple"
                         Grid.Row="3" Height="60" Margin="5,5,5,5">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="{Binding Path=., Converter={StaticResource iPointToString}}"  />
                            </StackPanel>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                    <ListBox.ContextMenu>
                        <ContextMenu DataContext="{Binding Path=PlacementTarget, RelativeSource={RelativeSource Self}}">
                            <MenuItem Header="{x:Static prop:Resources.MenuLabelDelete}" Command="{Binding DataContext.DeletePointCommand}" CommandParameter="{Binding Path=SelectedItems}" />
                            <MenuItem Header="{x:Static prop:Resources.MenuLabelDeleteAll}" Command="{Binding DataContext.DeleteAllPointsCommand}" CommandParameter="{x:Static prop:Resources.ToolModeObserver}" />
                        </ContextMenu>
                    </ListBox.ContextMenu>
                </ListBox>

                <CheckBox IsChecked="{Binding ShowNonVisibleData}" Content="{x:Static prop:Resources.LabelNonVisible}" ToolTip="{x:Static prop:Resources.LabelNonVisible}"   HorizontalAlignment="Left" Margin="5,9,5,5" Grid.Row="4" VerticalAlignment="Top" />

                <ProgressBar Name="pbStatus" IsIndeterminate="True" Width="Auto" HorizontalAlignment="Stretch" Visibility="{Binding DisplayProgressBar}" Grid.ColumnSpan="3" Margin="5,0"/>
                <Button Content="{x:Static prop:Resources.LabelCancel}" ToolTip="{x:Static prop:Resources.LabelCancel}" Command="{Binding CancelCommand}" Margin="0,0,104,5" HorizontalAlignment="Right" VerticalAlignment="Bottom" Grid.Row="5" IsEnabled="{Binding IsCancelEnabled}"/>
                <Button Content="{x:Static prop:Resources.LabelOK}" ToolTip="{x:Static prop:Resources.LabelOK}" Command="{Binding SubmitCommand}" HorizontalAlignment="Right" Margin="0,5,66,0" Grid.Row="5" VerticalAlignment="Top" Width="33">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="IsEnabled" Value="False" />
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding ElementName=listBoxObservers, Path=HasItems}" Value="True" />
                                        <Condition Binding="{Binding ElementName=tbObserverOffset, Path=(Validation.HasError)}" Value="False" />
                                        <Condition Binding="{Binding ElementName=tbSurfaceOffset, Path=(Validation.HasError)}" Value="False" />
                                        <Condition Binding="{Binding ElementName=tbMinDistance, Path=(Validation.HasError)}" Value="False" />
                                        <Condition Binding="{Binding ElementName=tbMaxDistance, Path=(Validation.HasError)}" Value="False" />
                                        <Condition Binding="{Binding ElementName=tbHFOVFrom, Path=(Validation.HasError)}" Value="False" />
                                        <Condition Binding="{Binding ElementName=tbHFOVTo, Path=(Validation.HasError)}" Value="False" />
                                        <Condition Binding="{Binding ElementName=tbVFOVFrom, Path=(Validation.HasError)}" Value="False" />
                                        <Condition Binding="{Binding ElementName=tbVFOVTo, Path=(Validation.HasError)}" Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.Setters>
                                        <Setter Property="IsEnabled" Value="True" />
                                    </MultiDataTrigger.Setters>
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Button Content="{x:Static prop:Resources.LabelClearGraphics}" ToolTip="{x:Static prop:Resources.LabelClearGraphics}" Command="{Binding ClearGraphicsCommand}" HorizontalAlignment="Right" Margin="5,5,5,5" Grid.Row="5" VerticalAlignment="Top" Width="85" Grid.ColumnSpan="3" IsEnabled="{Binding IsClearEnabled}"/>

                <Expander Header="{x:Static prop:Resources.LabelObserverOptions}" 
                          HorizontalAlignment="Stretch" Margin="0,5,5,0" Grid.Row="6" 
                          IsExpanded="False" 
                          Grid.ColumnSpan="3">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <GroupBox Header="{x:Static prop:Resources.LabelOffsets}" Grid.ColumnSpan="4" Padding="0,0,3,0">
                            <StackPanel>
                                <TextBlock Text="{x:Static prop:Resources.LabelObserverOffset}" Margin="3,3,0,0" Grid.ColumnSpan="2" Grid.Row="0"/>
                                <TextBox x:Name="tbObserverOffset" Margin="3,3,0,0" 
                                    Text="{Binding ObserverOffset, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True}"
                                    Validation.ErrorTemplate="{StaticResource errorTemplate}">
                                    <TextBox.InputBindings>
                                        <KeyBinding Key="Enter" Command="{Binding EnterKeyCommand}" />
                                    </TextBox.InputBindings>
                                </TextBox>

                                <TextBlock Text="{x:Static prop:Resources.LabelSurfaceOffset}" Margin="3,3,0,0" Grid.ColumnSpan="4" />
                                <TextBox x:Name="tbSurfaceOffset" Margin="3,3,0,0" 
                                    Text="{Binding SurfaceOffset, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True}"
                                    Validation.ErrorTemplate="{StaticResource errorTemplate}">
                                    <TextBox.InputBindings>
                                        <KeyBinding Key="Enter" Command="{Binding EnterKeyCommand}" />
                                    </TextBox.InputBindings>
                                </TextBox>
                                <ComboBox x:Name="cmbOffsetUnitType"
                                    ItemsSource="{Binding Source={StaticResource lineDistanceData}}" 
                                    SelectedItem="{Binding Path=OffsetUnitType, Mode=TwoWay}"                      
                                    Height="Auto" Width="Auto" Margin="3,3,0,0">
                                </ComboBox>
                            </StackPanel>
                        </GroupBox>
                        <GroupBox Header="{x:Static prop:Resources.LabelDistance}" Grid.Row="5" Grid.ColumnSpan="4">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <TextBox x:Name="tbMinDistance" Grid.Column="0"
                                    Margin="3,3,0,0" 
                                    Text="{Binding MinDistance, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True}"
                                    Validation.ErrorTemplate="{StaticResource errorTemplate}"
                                    HorizontalAlignment="Stretch">
                                    <TextBox.InputBindings>
                                        <KeyBinding Key="Enter" Command="{Binding EnterKeyCommand}" />
                                    </TextBox.InputBindings>
                                </TextBox>
                                <TextBlock Text="{x:Static prop:Resources.LabelTo}" HorizontalAlignment="Center" VerticalAlignment="Center" 
                                           Grid.Column="1"
                                           Margin="3,3,0,0" />
                                <TextBox x:Name="tbMaxDistance" Margin="3,3,0,0" Grid.Column="2"
                                    Text="{Binding MaxDistance, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True}"
                                    Validation.ErrorTemplate="{StaticResource errorTemplate}"
                                    HorizontalAlignment="Stretch">
                                    <TextBox.InputBindings>
                                        <KeyBinding Key="Enter" Command="{Binding EnterKeyCommand}" />
                                    </TextBox.InputBindings>
                                </TextBox>
                            </Grid>
                        </GroupBox>

                        <GroupBox Header="{x:Static prop:Resources.LabelFieldOfView}" Grid.Row="6" Grid.ColumnSpan="4">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <TextBlock Text="{x:Static prop:Resources.LabelHorizontalFOV}" Margin="3,3,0,0" Grid.ColumnSpan="3"/>
                                <TextBox x:Name="tbHFOVFrom" Margin="3,3,0,0" 
                                    Text="{Binding LeftHorizontalFOV, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True}"
                                    Validation.ErrorTemplate="{StaticResource errorTemplate}"
                                    Grid.Row="1" >
                                    <TextBox.InputBindings>
                                        <KeyBinding Key="Enter" Command="{Binding EnterKeyCommand}" />
                                    </TextBox.InputBindings>
                                </TextBox>
                                <TextBlock Text="{x:Static prop:Resources.LabelTo}" 
                                           HorizontalAlignment="Center" VerticalAlignment="Bottom" 
                                           Margin="3,3,0,0" 
                                           Grid.Row="1" Grid.Column="1"/>
                                <TextBox x:Name="tbHFOVTo" Margin="3,3,0,0" 
                                    Text="{Binding RightHorizontalFOV, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True}"
                                    Validation.ErrorTemplate="{StaticResource errorTemplate}"
                                    Grid.Row="1" Grid.Column="2" >
                                    <TextBox.InputBindings>
                                        <KeyBinding Key="Enter" Command="{Binding EnterKeyCommand}" />
                                    </TextBox.InputBindings>
                                </TextBox>

                                <TextBlock Text="{x:Static prop:Resources.LabelVerticalFOV}" Margin="3,3,0,0" Grid.ColumnSpan="3" Grid.Row="2"/>
                                <TextBox x:Name="tbVFOVFrom" Margin="3,3,0,0" 
                                    Text="{Binding BottomVerticalFOV, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True}"
                                    Validation.ErrorTemplate="{StaticResource errorTemplate}"
                                    Grid.Row="3" >
                                    <TextBox.InputBindings>
                                        <KeyBinding Key="Enter" Command="{Binding EnterKeyCommand}" />
                                    </TextBox.InputBindings>
                                </TextBox>

                                <TextBlock Text="{x:Static prop:Resources.LabelTo}" 
                                           HorizontalAlignment="Center" VerticalAlignment="Center" 
                                           Margin="3,3,0,0" 
                                           Grid.Row="3" Grid.Column="1"/>
                                <TextBox x:Name="tbVFOVTo" Margin="3,3,0,0" 
                                     Text="{Binding TopVerticalFOV, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True}"
                                     Validation.ErrorTemplate="{StaticResource errorTemplate}"
                                     Grid.Row="3" Grid.Column="2" >
                                    <TextBox.InputBindings>
                                        <KeyBinding Key="Enter" Command="{Binding EnterKeyCommand}" />
                                    </TextBox.InputBindings>
                                </TextBox>
                                <ComboBox x:Name="cmbDegreeDistanceType"
                                    ItemsSource="{Binding Source={StaticResource angularDistanceData}}" 
                                    SelectedItem="{Binding Path=AngularUnitType, Mode=TwoWay}"                        
                                    Height="Auto" Width="Auto" 
                                          Margin="3,3,0,0"
                                    Grid.Row="4" Grid.ColumnSpan="3">
                                </ComboBox>
                            </Grid>
                        </GroupBox>
                    </Grid>
                </Expander>
            </Grid>
        </ScrollViewer>
    </Grid>
</UserControl>
